buildscript {
    repositories {
        mavenCentral()
    }
}

allprojects {
    apply plugin: 'java'

    group = 'tech.igris'

    sourceCompatibility = JavaVersion.VERSION_18
    targetCompatibility = JavaVersion.VERSION_18

    repositories {
        mavenCentral()
    }

    ext.springBootVersion = '2.7.1'
    ext.testcontainersVersion = '1.15.1'

    ext.libVersions = [
            springBoot            : "${springBootVersion}",
            springCloud           : '2020.0.2',
            lombok                : "1.18.20",
            javax                 : "1.3.2",
            mapstruct             : "1.4.2.Final",
            lombokMapstructBinding: "0.2.0",
            discord               : "5.0.0-alpha.12",
            springMVC             : "5.3.21",
            thymeleaf             : "2.7.1",
    ]
    ext.libs = [
            logging  : ["ch.qos.logback:logback-classic",
                        "org.codehaus.janino:janino"],
            javax    : ["javax.annotation:javax.annotation-api:${libVersions.javax}",
                        "javax.validation:validation-api:2.0.1.Final"],
            unitTest : ["org.junit.jupiter:junit-jupiter-api",
                        "org.junit.jupiter:junit-jupiter-params",
                        "org.junit.jupiter:junit-jupiter-engine",
                        "org.assertj:assertj-core",
                        "org.mockito:mockito-core",
                        "org.mockito:mockito-inline",
                        "org.mockito:mockito-junit-jupiter"],
            postgres : "org.postgresql:postgresql",
            flyway   : "org.flywaydb:flyway-core",
            discord  : "net.dv8tion:JDA:${libVersions.discord}",
            hibernate: ["org.hibernate:hibernate-entitymanager",
                        "org.hibernate:hibernate-core"],
            springWeb: ["org.springframework.boot:spring-boot-starter-web",
                        "org.springframework:spring-webmvc:${libVersions.springMVC}",
                        "org.springframework.boot:spring-boot-starter-thymeleaf:${libVersions.thymeleaf}"],
            springJpa: "org.springframework.boot:spring-boot-starter-data-jpa",
            database : "org.postgresql:postgresq"

    ]

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:${libVersions.springBoot}")
        implementation "org.mapstruct:mapstruct:${libVersions.mapstruct}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${libVersions.mapstruct}"
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${libVersions.lombokMapstructBinding}"
        compileOnly "org.projectlombok:lombok:${libVersions.lombok}"
        annotationProcessor "org.projectlombok:lombok:${libVersions.lombok}"
        testCompileOnly "org.projectlombok:lombok:${libVersions.lombok}"
        testAnnotationProcessor "org.projectlombok:lombok:${libVersions.lombok}"
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}